{"knowledge_relations":[{"id":1,"source_id":"69ebfc7e-034a-4139-a68c-9a2e99c7f983","target_id":"2cb894dc-ebf6-49b5-afe7-14228950b96b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 69ebfc7e-034a-4139-a68c-9a2e99c7f983 -\u003e 2cb894dc-ebf6-49b5-afe7-14228950b96b","gmt_create":"2025-09-05T18:41:49.72275+05:30","gmt_modified":"2025-09-05T18:41:49.72275+05:30"},{"id":2,"source_id":"69ebfc7e-034a-4139-a68c-9a2e99c7f983","target_id":"daab54d9-0ed2-4cda-bab8-4fab2d56d372","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 69ebfc7e-034a-4139-a68c-9a2e99c7f983 -\u003e daab54d9-0ed2-4cda-bab8-4fab2d56d372","gmt_create":"2025-09-05T18:41:49.7295115+05:30","gmt_modified":"2025-09-05T18:41:49.7295115+05:30"},{"id":3,"source_id":"69ebfc7e-034a-4139-a68c-9a2e99c7f983","target_id":"f124efbc-b121-4bc1-8857-f40fd2febc87","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 69ebfc7e-034a-4139-a68c-9a2e99c7f983 -\u003e f124efbc-b121-4bc1-8857-f40fd2febc87","gmt_create":"2025-09-05T18:41:49.7351795+05:30","gmt_modified":"2025-09-05T18:41:49.7351795+05:30"},{"id":4,"source_id":"c66882f3-50b2-4db2-bf04-4d8afa4a8041","target_id":"b3fed457-f5bd-4be7-9603-055c40097fe1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c66882f3-50b2-4db2-bf04-4d8afa4a8041 -\u003e b3fed457-f5bd-4be7-9603-055c40097fe1","gmt_create":"2025-09-05T18:41:49.7393217+05:30","gmt_modified":"2025-09-05T18:41:49.7393217+05:30"},{"id":5,"source_id":"c66882f3-50b2-4db2-bf04-4d8afa4a8041","target_id":"3bef8de7-ccc8-4813-810a-39324233edf2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c66882f3-50b2-4db2-bf04-4d8afa4a8041 -\u003e 3bef8de7-ccc8-4813-810a-39324233edf2","gmt_create":"2025-09-05T18:41:49.7445594+05:30","gmt_modified":"2025-09-05T18:41:49.7445594+05:30"},{"id":6,"source_id":"c66882f3-50b2-4db2-bf04-4d8afa4a8041","target_id":"9629b59e-5cd9-4a9c-ac29-5351d26b6a67","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c66882f3-50b2-4db2-bf04-4d8afa4a8041 -\u003e 9629b59e-5cd9-4a9c-ac29-5351d26b6a67","gmt_create":"2025-09-05T18:41:49.7494663+05:30","gmt_modified":"2025-09-05T18:41:49.7494663+05:30"}],"wiki_catalogs":[{"id":"aaef2078-22a1-45f0-8394-65dbdc4d41ee","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"System Overview","description":"system-overview","prompt":"Create comprehensive content for this section focused on the expense-wallet full-stack application. Explain its purpose as a personal expense tracking solution with user authentication, transaction management, and financial summary features. Describe the high-level architecture including the separation between the Express.js backend and React Native mobile frontend. Document the core workflows: user sign-up/sign-in via Clerk, creating and viewing transactions, calculating financial summaries, and deleting records. Illustrate the overall data flow from mobile UI through API to PostgreSQL database and back. Include deployment considerations such as the health check endpoint preventing backend sleep on Render and the production-only cron job. Use terminology consistent with the codebase like 'transactions', 'userId', 'Clerk authentication', and 'rate limiting'. Provide a conceptual diagram showing the system context with mobile app, API server, database, and third-party services. Make this section accessible to beginners while establishing the foundation for more technical sections.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5707401+05:30","gmt_modified":"2025-09-05T18:28:01.1254103+05:30","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjECeCGuLoR2IwruDlfaI6j3yrxjzUYfuy/PkXL4s2fe2Q/+ElQvzrakKLa+r4Z4VhNnAF2F2qnko2/QRvNk016MBSiRX7IkMKg073lRdmk2HF3lfEz6501q76hm0APhtP+bR342SU2ITzq1bxh/6bMS5Fn431Gj5UjHyQre8mAtBDN1EzCedcgVcGB6vsMW5+LxwOKMYEjYXzVfXY7pfnCibmK+elSZlLD5CnQKDRnYtZEInv0XEtoq1MYSFxHtO/Pl2L/eVwnEvyPj9p4uTqZjD/gwUimGu4qTeD2wQkgw9eh5vGbRbtvtbkeGZhrXUkhs4E+mEfJv2WVE7t2HCirvJRbPCQOrTxc2N6yYRa1kxBrYy8vz30Ll1z4uLFXOGZpIIRfuuXHFjC4Cin6wMV3415B78bYWFcCkSmZkmpdGaIV2VlCCwutOWIroOj8N0EctN5vlinUDod4B4Z9H7cBAcq1ItM5DnNapZ6cmFjHQ/d5Thd8VRSGn9dSvz/do0J1faawkfCPhYo6LkubiWNT7JwI6ppu3qoRYhrJjks6e3MaYkEe/W2e2CG7JTRwlqwkmnvcZmFxMmElbhHhg8NUVQhUc7ZM8WphQ2y5FmMheTYsjqaidFhfE2/KJVJzRQ14AfNB5oA0LEuxJ9HD+BcXNjTWBKcGXxKwlGePX8uYeMXd3Z8Qi8gKhZP72d0o/13uEbHP8S3Hr2yBrFoCQYp7PDB3qNHKb5tjAT37KC0l76IEcHGCQeCS2IqLqGaZvmfZbnIPKnp04Tp6qsaZT7JrR2QK9KD/aelRqF42RV/0EeavVTye8sqCtiMQZO1nKOROez3VdgCVoUIsLZ0+tqr+38G1wJNnX4wGUPO01Qcct5mm/FxiJKXkGIgy6s462Lyq5DGX2amW3TgXkXXxIipVKzSb5/TWESbhlMtZBa/telw6mv7R246WizGacSdQlUEG+IKVZjfjADWQ04nBoPvNZtTCs0oSeoK6Pm2DzU9lze4jGqAGk75t+7q7cShAmNE+72aoasSdlcOfiJKdutA/k6z0X/MUWSHVSRKybIVszBPAjbH5h8bBQ+qcqdlksi9TAZJla05OUQAUmRANC7/Jyq2XdlCmXwduaYfTIFRNK2dcD1spYjNpOvZ3iV3nPoa8mcrkZxG4shWAVVGNxDs/2xB2fRZkhnpTQb13724XZyCQX2pjrCpL9XJNP24bllSlAs+0otbcBe9liwobYKCJcDYO+VPeRdFNsK7Ch5VoRjCew8d8cplglPgZPmMpBbPnRWqMAWyU+dCeUS2+e9DZJvZemFhox/+o0aqQqrWTY0XOwQxiW8kXen/hBhH3oXGhyL787tMU+OFK+BXARXRvp4D23Po5KuQYA1ouvJhZZ9yOxRPlQMddC/QoLXBiCq92WDnRDIx8P08mHH4vW9KII2nlA9959c2VcxITzcuhaePCUU4be95suQA9cbsJRnoDLYTki0330t8dJ5mp+Q37erIVJXXSMAWH0c2CC24pKoVzpf7uJfgyJGELXnlAgLm/dKhqUGRkzmQHx5I4MYuHgXpjQBMVKBGFmVM6+aaRn+QkY2hw+hfcqcSTaPlERPdg9fk0iIeitG5Ji3gv/qwzvTolSEV1djmMVQsKnj6jB1yNnIHyFlM+PMONI0jVCufuWo0+D5NkPNldxzrr35dcl2DkT7+JmotaWKLHCb+0LHqVT8ot32fb9W6Ob3u4+0MZuAj0dQQ1r+Alcty41E2FY=","layer_level":0},{"id":"503ad45f-095e-4dbb-b3fa-0f68fb87669a","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Component Tree","description":"frontend-component-tree","prompt":"Create detailed documentation for the frontend component hierarchy in the expense-wallet mobile application. Describe the root layout structure using Expo Router's _layout.jsx and route groups (auth) and (root) to manage navigation and authentication gating. Explain how SafeScreen serves as a universal container enforcing safe area boundaries and consistent padding across all screens. Document each UI component's purpose, composition, and usage: BalanceCard for financial summary display, TransactionItem for rendering individual transactions, NoTransactionsFound for empty states, SignOutButton for authentication logout, and PageLoader for loading states. Include JSX code examples showing component integration within index.jsx and create.jsx screens. Illustrate parent-child relationships and data flow from screen to component. Address accessibility considerations, responsive layout behavior, and styling via imported style modules. This section should enable developers to understand, reuse, and extend the UI components effectively.","parent_id":"c7aff158-639e-4807-a30a-29401569f71b","order":0,"progress_status":"completed","dependent_files":"mobile/app/_layout.jsx,mobile/app/(root)/index.jsx,mobile/app/(root)/create.jsx,mobile/components/SafeScreen.jsx,mobile/components/BalanceCard.jsx,mobile/components/TransactionItem.jsx,mobile/components/NoTransactionsFound.jsx,mobile/components/SignOutButton.jsx,mobile/components/PageLoader.jsx","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:54.3804207+05:30","gmt_modified":"2025-09-05T18:36:54.4157314+05:30","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"21b5078a-ee01-4165-9da7-0b6792b00b6f","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"API Endpoints","description":"api-endpoints","prompt":"Create API documentation for the transaction management API endpoints in the expense-wallet backend. Document the following RESTful routes: GET /api/transactions/:userId for fetching user transactions, POST /api/transactions for creating new transactions, DELETE /api/transactions/:id for removing a transaction by ID, and GET /api/transactions/summary/:userId for retrieving financial summary (balance, income, expense). For each endpoint, specify HTTP method, URL pattern, request headers (including authentication via Clerk), query/path parameters, request body schema (for POST), and response format (including success and error cases). Explain how user identity is validated through the userId parameter and how data is retrieved or modified in the Neon PostgreSQL database using parameterized queries. Include examples of valid and invalid requests, error codes (400, 404, 429, 500), and rate limiting behavior via Upstash. Address security considerations such as input validation and SQL injection prevention. Provide client implementation guidelines for mobile integration and performance tips like efficient data fetching and caching strategies.","parent_id":"305012ab-71a4-47e7-8c58-85f821727ce7","order":0,"progress_status":"completed","dependent_files":"backend/src/routes/transactionsRoute.js,backend/src/controllers/transactionsController.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:27:14.2360032+05:30","gmt_modified":"2025-09-05T18:37:52.3565527+05:30","raw_data":"WikiEncrypted:lwlGKdndM3jWepiBubfCPr8vu4EakT6pVueAsBb4WmTJGXrmupetuq0wwlTxUoGoltBRJmbD6/35/Md5oG+Lu4eeaOWuf9Nl0HoYIyZWQ3I6U8hpVSt+6Q7UKHdfa+UNj0hS7HQYYT7ZjUQz2VKcOpp1+Df/Zz8HQ+xtYwy84gWEHtMFSlfYWwTcO3N/UftO5yyIjR9iRQ9zEJTHBbPjroe0Z62Oto+2IWpa7IAvuJpm7kFa5q8Gdnx9UYHNTYtmplrrGk/TwAalnM+epUzDfE5xPvOzkfQLKRSvJ9sB1ggWzvwzZUF0V0DFqkOrx+JLIN/TQdcpRqR/Sye1dyvPTRaF6vokJd2dHu37w/7ul4IyAIWugjALXqaVoKpGZ+7xC6XDMXVETebDq7uG6PRKE8IBnRFPWYQpxhloIfxOKc+NuYTT+xz4xhdNZyuXRJ9j25arvTet8kZvZWlB0sdJY9/PnA/JihipgefHd82sxE92EIZ9Auk4n59v2+AhSud3SRP5Wb2LfEdGpRJ/8Nia3YQI1nJDA8jQuA3dzSwZfbOtr7CTJdnbj8Xc0yPcP8DWGfQ+fPZsd30jNkV449ClxpF68/pNw1TxG+n6uDjFpZ+8/2TeYP5Bg1+SWVQGn1Bhva0niNoPUZbO6khK/ZNQb0fCsKul5jr0xnjA3TQUYD2bKU1oIvCK7S33AXoDFfdoKdK2KGzdA1RbuPH3s5n6/zrhF3+anYxz7N9+rf9fDRNmtVl6eNKtyHoh9psXnVwRlSof4QIbJi8l3IUKfgOGD5QZdGctJhU/dRD5iGUO3EZRsOzAuI9q+2ddBgpQNJ2TrKL9Qvrk4ekKUgPloawZ9ZpWBL7EZw4KxjzX3VVtg+kb+3Nz9ASlvVJ87Dm06cg4gV7VgmbQ1/ETTJFQbAm3+jzHi0+hxnegsAcM/RNVRrsRdHAwN9I8OVB8V7+pIaupg8mXuKwoEBTlMaoqIfmF8LHpvgdo4HinurI2/bmrh33+ZDtgb9vTNkYm2SzO64Fg5KxKkP4ry5jqLc4ZbD0qcECSPXvxLy/Gu3b44WTxmn0h3Xc233ZM3/H1QPJA16ZZ9G518Z85XBP70dZi2JapmxeMhEgalw/CtSmg6PfeujA80HsZAae5jYtdD0lwSG/drKlRXNLltXv4haddjquOgUXi3ZHhZHrrCQHSqg/jzUMNhDY5zOMr8ye14YWuxDPhyQWQ+fbulFN6iHkdyko5do+tgp1MOiNai5r1vLW89GgeaGpM8elkJ8Tr8HRqxdf3HLq+/oGeFSuG8JciQOZ3EWK8EBWjFqr+8dagPPxKbrRasEvxyo6QWpiEZFqBfA2Eo/36pCtsJwcEt7AgDEVB0YkWCgP27FWvoGUogfmks0yFzpwXalQvZdTcNHyB62/POZSUnccM7R8RnJLnIhSnyalZC5f/DBbOz8SU9XZbAbFDhzoAf/Ec5sq9ndHgdYR5bM/X2uybAPCz2JZUhpmVn9LydZmVqdxEM0dPg98S1CbDF2fk64BubRs75eGSqS+Hs5z+Mblv1xqvhAFWIpKFCyKPp18FTkmnjLCU3u+n8BzhyqHhtmONZu4TtH+x3kaFStfBC1jlBKZDBBtsRbB6NF2bx+tqzes1xt2U8TvA/XtVkFaMnUJREW3UQ4YFNhB7QhpRKPHRrBmL95m+H7tawMe7VsNlyEwqwi/cUkx3BougwkijCpQx52CncedyXETa2AoJkIXYqzS1qPhm+ouJ9BDXe76lamUcXv5OARcZZJVKzx9O9SqqqFeFln4picFjYXnzyu8RMrneoxZv/9CZv3zTFPnf57Ks0RJIl/Nkgc+F4FnHKRru501H1+V0gqjvOR4tsHykZabzEIbcA/nhURxWjbpeNFd1wrW5oJ/BQQpdHQkcC3Pj/Ui0qdWOw6lG1SPiz6uB0e6UcB/bAoSrIpPlazp2+1cFEd3X5eXqu94aS3uWr4Qls9isX5+ULtsN","layer_level":1},{"id":"9cb59031-6a72-4a61-9c0d-2c7c390b4688","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Technology Stack","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technology stack used in the expense-wallet application. Break down the stack by layer: frontend (Expo, React Native, expo-router, @clerk/clerk-expo), backend (Node.js, Express.js), database (@neondatabase/serverless for PostgreSQL), and infrastructure (@upstash/ratelimit for Redis-based rate limiting, cron for scheduled jobs). Explain the role of each major dependency as used in the codebase—for example, how @clerk/clerk-expo handles authentication with token caching in _layout.jsx, or how @upstash/ratelimit protects API endpoints via middleware. Include version compatibility notes if discernible from package.json. Highlight key architectural decisions such as choosing serverless PostgreSQL and Redis rate limiting for scalability. Provide practical examples from the codebase showing integration points, such as the use of parameterized queries in db.js to prevent SQL injection. Address performance and security implications of the selected technologies. Make this section useful for both new developers evaluating the project and experienced engineers looking to extend it.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"backend/package.json,mobile/package.json","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5743202+05:30","gmt_modified":"2025-09-05T18:28:56.0378025+05:30","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZP+IW+8SVWDLlYtdgYFwxhN/IzVvWSvRL/Muu9yQMewLzpUDKtni8NsX1+rB4gGVIIQ4DXjk/rBoTlh36QAbFzLBTFeQ7OkDRhGAK4mRyBLgvwfMftcwhrpGpXVfGLotnCHQ+J79+RoAQ0IXdtEtxt4B5hp74ie/LRpNXXPfu+loDwgTJlkXWh163YAngTHBZWVLKAXCa/I1qChV04HEV2/dAAluFupVaVeek47AZcsE+BjmSWuPNf7aKYErcFqC9wUic8Lo0xGyuf3pPnNhnqQlY9Lu5wJYl3IjArGVEs2mSAHJO5Jl2c+S4ksH4cFeRRJB7YPqS+3Lw7zhHtR45sNjq5k+NAWN7Lf7ikMd8ddJJfxgJkutuQqhVIlva7ApEAJF4uiN74IUIGi9OQUtWjlbZ2GtxWiJOuxGevXAKJ96g3v1sqJGDtjco5bRO8d/yUUju6GSxk7UoeOZYe/LGz6y927GPwqRV9rsPJs2hrr+IEGnvATt0bGI2Bdp55yWiwKmbrjDgJ748rb4Hmh2u0zHxM7fZ0F/6E5nJG/PHdkL21GzwM8bRaxgAMDiXceGslwifZW+I2AtHfPhYH4yKBkeNSymcsiVgQHGsuR2+bRDieOG9POiPnjxFtFinbioeCjur9CP6P+GZ0zlYDjCq1stPW47PyuZwIjLMiMD52QOGB94G6J0njnLHZrKWMsc+DOZAGz3ac1+wdUt6ZEKKMhhFZ6eXE4CaJiKhcn/1D9CBj0o0fRuRMfVoQjnHT7av3/mgcl3rlMr0sdfgR3fS0sTcOTBdL6y8Ln1fZnibf4mVrqOD62U+Lw8v1BIEAkaeh1jRY/qGYxwR8//rjUwxgMqujCuDbz0JzV+KcBp2BzHGM6gAJ0rNyL+Y7lHGgcee0Q6x5aLOzMpR7evNIk1SvE4SRJYynZ7RBpOgU+9T9/cYXKhMYK7uvjDU04ncMar8QPjSwH5aAEND0NnpxSJHNJgZJJijiw4G2PAoyPybVTyRsPA9KjIIkv6IcDVCpF6UhR0BWbYdUN5Tmo3RIl7Q6acuPc4XLNNXzPk4AH3QrmlOqYArv6TUb8wDNNBGZbKi5hCVXqay3BH9r82yk3bWMvHAIlVKdnqKSUzmC3V+smwJXds6SVw/YqkDGq8zVHN5q0/dr0W30ISxXwRAHisZq6RAK3JEPeCmqQv1bKOn7C7KaRMO0HyyhcO843TDQtGCPERwF9yu0dbFLmaaaVpDjpkXYf63M+NK4Ob0biMHSRyVjskIyMOSAP9UD7rjH5vOI6DKxyLbxg/Bi9KgqIAbsdNjpyQ6RIoSQrINeFwjoByxuaFAG0qDzAdHXEz24KVknD/Rhh7Ha8JW3gmKs7DFkL/4ynmec8G2TcBKmN38mBI9UWn3ibSItERNhsTKptcGa5/lqgeYnkHiKDWWev/tZAurn9cHF8ZO/A3qlDiuew5/SYZhtkBdQ5nJqa/nPV0kqKwqp4Qha8v05/AIUUq7BzNPTwV6rM+l+AODGyxKTnZNNHsqxIiOyAfQZB1ZLkgYL0aPjbe9VSG6vmvE++vhlDCs+Z9tniF2LpzrdItOPH72rfTYzKlASJbndeAlDQ/1GohTI3XMQpVOFJu04PzxBDRx1ep6+dBf02TqdyHW7axwipfdKkx63Tc/e2lqzabqY74354nH9TBKpXw5MV//pCNSR8TXibbeANzYD97XZ8UK9+DLO00WYolJJabsKpv46GGPyFMLMUK8W/NL91DLoVs0m4Q4vLUbZ8BpjTxims5mTjYpJRWTAqsHxuB+A7X2JDWzU859jplkms+h8CrW5NCnJpaC4kLsv+pcU7ADMhxCcggxPHfr8xBldR2mGAd1Sp2Ueyt2asmenG92h7HXOg==","layer_level":0},{"id":"92ba0dc3-8c07-4ebc-bd62-4fa55a39d8a5","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"State Management","description":"frontend-state-management","prompt":"Develop comprehensive documentation for the state management system in the expense-wallet frontend. Focus on the custom useTransactions.js hook that manages all transaction-related data fetching, caching, and mutation using React's useState and useCallback hooks. Detail how the hook encapsulates API calls to fetch transactions and summary data, create new transactions, and delete existing ones via DELETE requests. Explain the internal state structure including transactions, summary, loading states, and error handling. Document how the hook exposes methods like createTransaction and deleteTransaction to consuming components such as index.jsx and create.jsx. Provide code examples showing integration between the hook and UI components, including dependency management with useEffect and revalidation patterns. Address error handling strategies, loading state coordination, and synchronization between multiple components using shared state. This section should enable developers to understand data flow, extend functionality, and troubleshoot state-related issues.","parent_id":"c7aff158-639e-4807-a30a-29401569f71b","order":1,"progress_status":"completed","dependent_files":"mobile/hooks/useTransactions.js,mobile/app/(root)/index.jsx,mobile/app/(root)/create.jsx,mobile/components/BalanceCard.jsx,mobile/components/TransactionItem.jsx","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:54.4024206+05:30","gmt_modified":"2025-09-05T18:39:02.069163+05:30","raw_data":"WikiEncrypted:rJ/rIw0gVau8jPGqKFBAsKbtFK5JxPAkrCYvrQfnySkmf+8iLSPeyGwGY5a14yg8ckxAwCve/Q9Bv7uShnilrPBBx7fEriSBeRyDhYJLPpqUwlgIZqL7GAgOckrOXFmzS0q4lhZvlY583WNcKdHDK7CCyfCtoq8pwOnhIJg7bEQ15KesC8NBPI218ba8xmL10lZhOjE3gOnSf4n0NENM3S68GpFM1K4J17QFQpWzItAbEnamaNz77al5KGG9r/Fwb68+DJtOxB3cAtYsM+/JvvATHVMR3g2XnTCIL9x0EmSkz1tAtBOURFdt5hB1GYk8GKK026aA96oHDA2r6jWyQc4cu6HJk5BkvhhuaUcGzNF2oVIEow/PZNt3ewbaazd+BLUyFJ6/yKmET5edjMQBQ3DGwFqRBesgrCxb0lB2DG6BFaI3QirKBTiIbobcXwfBs8RQR0ndF/ZdUncIWvE/e1RjXi4wdxa6VdS8VeINewlLadMlOZX6cdyWN7L1YFjMcK+auKVLbQpa2jLfevU4BTLs11RcvhcRne9s9EvO8F/KM9Odb+lqC5B9fqDiaxW8Ck/l1KKI5EJZ3eQ8Vs/C0y1gblu7bkTMLVxH7a1RQpNmwg+xQ1cX6jWtVxJC2qPTw7rYexKsjxjmiHYJZKQZIowCseLzhsuITfLb1ZD9Q9Mw2R3M5AwYp0jMsghoP9TY6Rz08FIVCggyrvDN370eres/FQstlE76NOQtJy+Bz7MvEr8KmLRzOO606x8+q25Xq4A/kWvG4MXeuESa+OrPzMbZNOcrSkBHj/TbwMH1DklT/SWl/VbEGC7ehE1bAfGxvYPo0ZTzs3/BcO0B2KXfSqsY5nJAHG4bnSDymaAbmvsokcb07vQ7KY/yJEQAJGsHevOGbmCqZqu/RkLYgGZH8GPAy4feHk8JxxPGw8WBh5pNEpioLazluoEYwT0NYN2G22/LQ8U+2DcO73n0aVGDtF8XgEjRrBsFu5Ukn3Ql5iXOvus40DFhr6sD33mYJEVcl925RkTGSCpfKmRW/uzJx1nrn5v+fdhBL3HXuxgDpiEXbhXUfy8DoTUpZBV+jhfMgzeELoqB6tBtUzwXXieBn7CI8WfkOODX9+mjio4VRDqAQ6Z6N0tRNnRxxtay0pajlh7PGvnosUfm1PV4CofycK6peSxMcB1S/B4jL5loJ3LRHAuN9nY1+lWmTtC34Pzd0RD5tRcuNqbOjxH5H7TYoqYIzaIAXPo7mVXA6Hv8+grWVi8weM1F4XxjvgzHTif11Tut797WqBTuxr/CdWXuelIO7KxKJ+MH5prjkDUDZ9L2K4Ij+idwMogLDBBEB4+6OEU01s5nEk9oToP+ffNSso/cYQ/C1z5GkxIDyFrprFeb2sogtv8QLfosp/NjUm1JmZHGnLIF54D6rHnHCFJ0vqZm8etyDK3CJGBc5PwMvMr2vWODnn7b6wD3zr0lJ/Qs7Lwjh/vTNLzRIUNIWXhDaJymCg3Pifk4gj33dOTB0GQDwAz9ELPrwx+pdHXuZ0irksORLgpevvAmxUHjVIacnJn3kLIAcTzgdwkjleUoFUbzjK0aTdx7FuZnzlA6VYpaOJpb9ZYKTlBEdGsZCF0ZuzUQYNrLyc/GZ7LQx9KkYhFEueBBS1hrOqZoxoYaq122JTAOwYjVce+sZnWgfnp1RZpnXA3NxzHKVWlBrOjes1wM5qZQtxqcQiJO0uSClUggrePQCxcPNrtjBwcu00J5i2SA6jnu/CymREQh+L8ritK9uPSOPjkjVXbcNW4Fa/jCq7Ojt9gkfaiEp6dVBueAMeSRGw4PssTK8ZGCvqiEVYqj4xGYdlNS0YGsdOvkiFfglSUOEDK3INVOHIWHSINNdnOqO6SM7vLjgFS7Wl43ht1oouB1PKveADPkylORF6Hr6Bg7RA5g3z63hdJSbgDKAWUQ3Mn4+TdIs5dbCbXp8vDop8ukgo0dvs9sfstZ+PkA","layer_level":1},{"id":"89058c89-bc09-416a-a3c8-d3f9d81c320c","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Database Integration","description":"database-integration","prompt":"Create comprehensive data model documentation for the transactions table in the expense-wallet application. Detail the schema structure: id (UUID, primary key), user_id (TEXT, indexed), title (TEXT), amount (REAL, positive for income, negative for expense), category (TEXT), and created_at (TIMESTAMP). Explain how the database connection is established using @neondatabase/serverless with environment-driven configuration (development vs production). Document the automatic table initialization logic in db.js that creates the transactions table if it does not exist, including the SQL DDL statement used. Describe data access patterns in transactionsController.js, including SELECT with WHERE clauses, INSERT with parameterized values, and DELETE by ID. Include indexing strategy on user_id for performance, and explain how SQL injection is prevented through parameterized queries. Provide sample queries, performance considerations for large datasets, and potential extension points such as adding new fields or indexes. Address data lifecycle, retention policies, and backup strategies in the context of serverless PostgreSQL.","parent_id":"305012ab-71a4-47e7-8c58-85f821727ce7","order":1,"progress_status":"completed","dependent_files":"backend/src/config/db.js,backend/src/controllers/transactionsController.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:27:14.2586988+05:30","gmt_modified":"2025-09-05T18:39:58.7113571+05:30","raw_data":"WikiEncrypted:veTYwq2y4io5qXerCTrkkB7xYx9mDpjT/u4D8aEQvJZ510EVlMo/vpQnuTBxE4IaBOe7jx58MwkN00Ml+x5aSsoItQI+8MeYOSenO8zklR/znyARCTaMq5uEHURihYKXTGCW+l1u6OwuS6KIh2MgBzT9i/zufbOFlgEnpgzdFlNJg0QUtlee3RochcCXWbpCkhdwRUCHp1HJHXYeBar0eUXaS6Yu/OOFjDGKd9+JaLJBLcq1sIhzA/2b3NjUf4+c8CDxv+ASWSQedXINMSOxkZGfWE3X0/QOg/8G1fvOg+vcl/AE0EyQLW/vfBdqfIWoh4WzJohyapMj/7GgAQahQtpduNTDG3CgKgKs8yD0r1OwAua3NYzhIKO6LRWITbdlv2yc97JBdsawQB+5IaAeSG0bG5E3v7gD0GBPnSBQOzyLbfM41glDYdRnyG26iAcIUY7TtPY19R1Pzgok/5W9CFsvK5quEfWpSio5mhDZmkOMn08grWJJwIPaFz2fv8SF7SmY+Uutu1pBhjrC1d9QPDBsFPZSVSMhMleUcnh1Bww5L8Ik2JOGsiaCEmaTOLj4wKVXNhvkJYe93g48VyKRqEXw2LAhqkSwIbwY8qE3vWY10tXZjL0bUDNSHalJta3rB94JOmeXIyL+SmV3xEU8+HrjkI5PsUw/A4Pi7xd6A2W8YAUXsZbO1KEVzTjwoVQbimQ7A4IffmL5L05hlbwDR98uFb7RJVOBxVQHhk93UJ1JnObNQZaf0VPl7jfv1djjvgwEJAuQSdSVVIZlfznlt+UiIreJTy3IWIne3NHMf6QYpfg13n/lkTlqye6PuSv3fjM66zIvWhYGy5DE/QKIxv2cVrOpb0Y2VHB+DPrmCeZb6wR1NKonEv4J7egMPs5I36/SPY35aYRhSSC3UiPJrhkFayJtwd49ABsQ6DV9w+lvJE0ZYd+P274mQ85LfXcsnzNSUPkMl0pFfZR0QEsGQqcQhL2ex/oZb9MyMjrTTn/B/9jm6ZV2j41PLpLVAwiGgH9T6c8E21Cs4PG3zuS7GdW/3yQJ+xF8bPQF+XxIbRSAtjNUSWn69xpFFIw3QOhH6uVB1dUJqMnzX/MvOPIhgcwUqb1vhs8xlUHy0Nf0/CzKGDIxmRHuxrOduxZzH62aEo2Xz25HnmaFVbxT0xFj2e88997aK+Vk+mpZfQhPeYIlkYkxhGiIO9YiAGErQ/RWwn57brmrs0eluDjhV5nV4OT4pvxqO0O/NfErSwO8/E/nhRPW/VPe8RXox+a4MmwOxCPlGi3aZl9iRWwJZzMUn5eR5l1xdeTSpkR/6JKx44NbvK0TAIAKeEQ45IVK7jxJFJnfiQs1w5E6qurfvA+Uerv54qOpGeSBitts56yXojiIokkket3smxHWW09Adb7C295xC0YUpHJGmUJiKNYbgFkqnDGLcjrauQdjLz7/VmQ5wkbYO108XmHuGGbjSvp6VdRhJELRrWIWMsN/ETFiGn2RCQYOYHcqs3hYVPFpzZVYqr9guUFpnPUx1FNjcFzinSec4E8hBOABvyYboafRuMs95uw1yD82w0agzBFtXelbfAUax8j21ECG6qFyr9iOA0jnLq1mFqRsFxtA+kSz6R+YKvIGxn8Uz81evcTogmsB4RZLbFriexKEMzM9NKS7fuVVqhe7HOgUpFsI8OLnitJC6s8bFlobUI0iMy8Vo7D85FdT33rxcS+PKJBxqwtFZJ0bTDVRWu0hqse0boZcfv819UgGXsyLS65eKlO654h4lMktEHHe2E9uF0sk2i9lJH8Du8s+Iua7zCIpxTQfFuszmBgGAwIo6cwCF2/BjTyc4e4ASJUvZ9ucULaKHVd6icyxNa/a6EKx7ADYtFyiAij4fEkpt4fxwvl+H0xQ4nyiWIriP5vPdwYwxvtUHv47JO92QlKcl0fw9x+J3N5fTg==","layer_level":1},{"id":"1c5fd2a7-c0a6-4a48-9029-bb286e6d9b96","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Directory Structure Breakdown","description":"directory-structure","prompt":"Create comprehensive content for this section focused on the project's directory organization. Describe the top-level separation between /backend (Express server with config, controllers, routes, and Server.js entry point) and /mobile (Expo-based React Native app using app router with (auth) and (root) route groups). Detail the purpose of each subdirectory: backend/src/config for database and rate limiting setup, backend/src/controllers and routes for API logic, mobile/app for screen components, mobile/components for reusable UI elements, mobile/hooks for custom logic like useTransactions.js, and mobile/constants for configuration like API_URL. Explain the significance of special directories like .expo and assets\\styles. Use actual file paths and names from the codebase consistently. Include guidance on where new features should be added—for example, new API endpoints would go in backend/src/routes and controllers, while new screens would be added under mobile/app/(root). Make this section serve as a navigational map for developers new to the codebase.","parent_id":"","order":2,"progress_status":"completed","dependent_files":".gitignore,backend/package.json,mobile/package.json","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5772945+05:30","gmt_modified":"2025-09-05T18:29:48.9544114+05:30","raw_data":"WikiEncrypted:vEO7Ijy2dU+nEIDHKdZkAfwFWhgNVyNCKalPSpB9ioKUA535o+OXZ/qQirsyZXiKxgQHkuFDRH55agoJKdlsysWqQzX0Ve+kdUMfiF77gVooDM4ZO3oD4fNzIw0mo2MQU2AbyhIFZ8PT32f9WcbIa+z/YNaAyP2tiOuEMbMKjOEn8o7qveofFl4HbFQjQajaXQaWd1ImGK/TiCGny5DTJbG2jA9lhn9RylE6WOi9wg0HtWDXzXfEZXmXzz4IV9h2Xp2Tz0QL+BWR3RBkVOhWUngUISh/5k+u1b36Q5p4HaHnCPtfVspYcv6Wo2Ot++cl4LQqXkzlsrUYY/kXO+8R/d1lLD+iUvmBZQZoB2r2JnDthTMYC0Fx6hB5le75cJx1v/Uw0WhacbVmWhSJBexN+VIImOFxd9RW506NG6hMI7J6U2feIROsz466ZDSiQ/qB3XcgsOA1EIQTGY6PMnMvIj6wpT0euH12z9sALHqmAJfki0ujIMtJtEnuwKxRv74z0e9h0vSFhPhzveqhRpE8XHaRj3/nzfejVy++2aiQJ5UKITl+2BjqbjK7741nrIrSf3NrEvFC2Y765HX4gaFBwoJMVVuk6vPmHfiXXHf8bQ83lImSwCcU9CjaGwEyLH98sBWzF30OirgFfoCXpfE8s+t1hxGEN6K3YCLKba+LWyzcLA3w+RRWmjsROz8Oz8sSiYoHrjtEs99sJfhd/gxsA0zhZL1jr2qPUW3VrZjFiqzrPeKxbREat29Md0LvjHdauNCHGOtgq/TzldgpKp1bJQWIkb3VT0e5VBjiQBII+AXzctUG4Tn4I17SPQdai9PtWUZuB8++ZDdZc0T/gKjhaigmbzS8VD3WyqU+Wu5MAshdw8QzZMGPgnh3NeKUPeSIGWKW5yQNRKet3dGuphTRVGwIikIE14xpqpg4ju9HSgGfFL95NK9UKML0zN4LF8OFdChlPfeVVln9RbnULgbLuslwVlwW8gsdThzl92vNs1ZbFNtVPkoEiaA4mWb4w1Av6XE8h5sGyD85tmSM5WvqAywg/zwnz5WEr/JXQtFCk5RJK+ikPxYOj1Fy/s0PmLdU3AZ7/8xH3iKhknJTwuV6UqxXdfEt4tkdAls+7auMbg2B0hzknia2du73APtfqh+LcX4cwCS1NvwDacBB0ZYutDFQdZvKuh6PMva7qeejo11cDE7Q7gnuHoXMnBjOCj2ZL95ALuyNtXy7qly4x2bJIRFv7FQyXJRtMGDaC0j8Ak82gXskmIwOESN+IXM4NWaq4kyDCs0c6ToK3zMEzmrBcnnOLd+afO1K/M+xXHU8Lr2W/urL6R8ZnWz93hIR7nAN5xnvBkW33D7aV3Crzq9ZblyuXpc0aprQyBY/FdWduG/IwDVYThZDApA8lJcgNV0kk1YMwRylNr72SOhiOpF7JT7mITQCAfmdYZF00ZF2av9F4Fuv0Q0ObPcUkOklEKxxVYypVM6jBaYURpf74GBETvJogqijZ8aIIJ6Vtjro077fr0XpPhoH6RlwMxT2jPURaV+TYntl9cuRmeZP0Ttd8NXSrmZeV+/Wgb5jbJaMurmh+kqkoYkl2nmK4Ha+FxUCH+7J6/8RmLl6RQGAjt8gh4NBc5B3EGebjVmt8f8rgE9a7rQOBrW6zgJYNzLXAi1/YLlXf3VF8dtpmQLIxAxV7GYqNemdkxM4C/ZvbOn2HVTkXKrCddJkmUtmYM7i6MZ8sJNpeW7yM4XVwWy8uJ3F93EYvsv/RKjZeDo4UNiAAQMjaNr/+djv3gfWWQOVnaoBmYsTjPJ9n547RvwYWGE5gw==","layer_level":0},{"id":"a1252fce-92f1-476f-84bd-e0d0b9baa4a4","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"API Clients","description":"frontend-api-clients","prompt":"Create detailed documentation for the API client implementation in the expense-wallet mobile frontend. Explain how the API_URL constant in api.js dynamically resolves the backend endpoint based on platform (localhost for Android, 10.0.2.2 for iOS simulator, production URL for web). Document how this configuration enables seamless development across different environments and device types. Detail how the useTransactions.js hook consumes this API_URL to construct endpoints for GET, POST, and DELETE operations. Provide examples of actual HTTP requests made from the frontend, including request headers, body payloads, and response handling. Address error scenarios such as network failures, CORS issues, and invalid responses. Include guidance on how to extend the API client for new endpoints or modify existing ones. This section should enable developers to configure, debug, and extend API communications between the mobile app and backend server.","parent_id":"c7aff158-639e-4807-a30a-29401569f71b","order":2,"progress_status":"completed","dependent_files":"mobile/constants/api.js,mobile/hooks/useTransactions.js,mobile/app/(root)/index.jsx,mobile/app/(root)/create.jsx","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:54.4086055+05:30","gmt_modified":"2025-09-05T18:40:57.1029957+05:30","raw_data":"WikiEncrypted:rJ/rIw0gVau8jPGqKFBAsMR8QlYsu9nu1u5rtD5gaa96SzFLfgMU8rUrEg2r/zGDIDRMSgWKqm+nkFdIYSDPbyDPejlfBulUR2YhCq7pAhKUDUIxw984m//j3lH/IjLJs4M6clclw2qdT7y++iRqn9KXBBmv/cNdEYAZfcu3lJjhjp5wy1LJ9mXjso/DpvUYnB0cGg7VaJ/nYGKQxDyGvZkgsqWT4KxF5QStF1jj+K60zQBfxbe+tYU0fnLC4M0ZAZb1gzudIUxaa5laBMYxFyGRZpWHJrmUfxzzpFGBxJ54EdEqvYOL9CnCZryrKJtGAda4MeoBUC4rwrZiMFifBi9YN4slEZoLVN1QMfqQFoLxsczQUdHcK+4lIsNiEm3XR/N8paX93VD3mSO1wjfGTklGKiw31rEBjA1JVCMZFJHNSJL6yH6bVKyyA1TSzpqzcyuWoJYi2SfKZCc/QbHpDC4poA4NqQfKZ/pEgiXbMOvBvp/jPzl4ujMglnJSy9p1rf+MNQx6ARO+z1e993UZyOXWS8G204bwKLCa9RttXLEbvMc4kf5YYBpZ74a9BLtW86Ke3nmmO+6SwEUrdxLBWBXi3M8H6Ys9GgLjiZC0EGxFriPMw/4ULxk98yQ1ZNVXEHLMt4Lmyfq/ediYQP9vADn/eNBB7hWeiztiCI4DX/zaN/p2SLvnOvfoxCT2MnFod4mpoAJofMrnrHcXlLoZMqEuiXdpBUrLECMrW8HIJTKmr/xOpAp2e0tilpIW5rOvFxF4+Iwldl8/esjfIgrgZaNmTecXJlqJXpXP/wH0sVFWvxy5o3YKclYhHw6pPoqoY+kAfcp1/9jA63hTVC0wK+B+tXog2eVpWpeZe0cs/oMumwlPyPmxEG4a4lyOGZERxxzkTv5DF9v5rkpxd23o1+KxTcxxJqgNZ5S3Co0YOqrDtsXHUdsoB/VueDCjqh3owWcusHPJzbB1fciyuDtDpVIwOUq+Nj4DSZFzKOsBu5rW5zA1kP1qXG1+GOTwe6aMi5ZjdIDPVnhd7Zio/fB13Ck0fCz91IzVmQQ0Mq8I0dv/OyoBVWm6Icg0faufEgHNikCYa47TVXA6RbHb7iUp9oMCLULWQZi2GLgRcVQTwnRWMPT7ewx6lVlyKNG0KXyRPqoRzFTueLvMttVAdW8nxq3UJYNor5X/1WC7+VmS4KZYtjBn8c+apAv8drpRRlG1gNLoG+3PbiRHl+bWmWj866Xn58HAW/RcvDRTmzwqki9X3Ggtxnnx6UOSZ8PpSqC3s0DbJZ2QUN9nU0mqSR5FcoY0HbAGBmpVAj0rr2BIF0AOEHdXNZfmEBJ+4meOEw8DFZlr5dPI4/NicwPhjzscPOqHSqskXNb0hNM209w3nQFFA9/fORH5IxunPH7D7JiZTS5Gys+sOE9kPzebi/glAwYxt8rq4PG1bRPDV9YDktjImjHb0oB1+fEo8BrvtpCEpxVsMayHtySVo9Rm8v+JAbz8MCcC15XnVgzbufOpW4T0NHYq4mSEkiOzUbKiFSOC5Mjsz0K7IKb7vl/hgwCk0x+IkL2ca+gLvoVi9imC2VfjV3d2pskDpmwUy3LBg8kzcs0qTd+6/GTQio34tSVgzO+4DRTu9EUG2TlzyICFqJEMIDafvRKH8DkE55OGp8FqojJI3H/IeqqH6YLpEa5L3i913RuBR+hromHC7r6Uc8FJXfx3reBcK1ljKp3VMYgXO0nY8Tk1o8fRjMZPEOsHbQ==","layer_level":1},{"id":"b07fbdfb-a58f-479f-ac60-0cb2184eb4d1","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Authentication Flow","description":"auth-flow","prompt":"Develop detailed content for the authentication and authorization flow in the expense-wallet backend. Explain how the system integrates with Clerk via token-based authentication, where the mobile app passes user identity through the userId parameter in API requests. Document the trust model: the backend assumes the userId is valid as it is derived from the authenticated session managed by Clerk on the frontend. Describe how each API endpoint validates the presence of userId and uses it to scope data access (e.g., fetching only that user's transactions). Highlight the absence of server-side token verification and the architectural trade-offs involved. Include the role of rate limiting via Upstash Redis (configured in upstash.js and applied in rateLimiter.js) as a security measure to prevent abuse. Explain how rate limiting is applied globally to all /api/* routes and how it helps protect against brute-force and scraping attacks. Provide guidance on securing endpoints, validating input, and potential enhancements such as adding JWT validation or middleware-based user authentication in the future.","parent_id":"305012ab-71a4-47e7-8c58-85f821727ce7","order":2,"progress_status":"completed","dependent_files":"backend/src/middleware/rateLimiter.js,backend/src/controllers/transactionsController.js,mobile/app/_layout.jsx","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:27:14.2660297+05:30","gmt_modified":"2025-09-05T18:41:49.6852606+05:30","raw_data":"WikiEncrypted:clowZjOQAc6ztqmyT3vDqXDM0SUQdaUIvhzh0BvOGrxj6BD3xspDXsMuK6d3E/eZ9iqBgxnIzUFeUmcNHRiVpbvC55HRjZAxFQUPiqY8Sum+Nt7xxQ2JQMKGyHYoJamQa4IuG/5Rd8XsDbGet/s7QTF2h9BXF2N/hScehIYYiWeO+uIFGhryXd43lRAL9ui1S38TWeiEouS+lusmE3BAGng9yyMxqyo+pvd3rY+hYLgq0mdrQl0pTTVAmBmEvDWpIrt+52dG60afY5LvXXgp6icz4Tx0SKgqn/D+cRxTvyPNlDhYPpTv4SEWL6tPsAOYqFm4h3XLF4BuPpHoR9sYWm4N2Xn1LP6hiJbWqBVqXQ15F66W5qD7NGt6M9n13/152Ieq4+43fruxEbxed8l9xK2QcbYrrDxPTg190hnGGtDQm30lzlRpYG1W2A/EjYxSK+lFCz5DeE//zS/BcsDpvnhIK7XVmIzsmkMl7e//dp1P39sxCq7S1rPea6ohRmkgsuvUeg86hRJa9r7+GpZUT4P3LXcTKyxK5FF/55o9nQkDt6z+L2p+G4xuqnzuO7hVeGsnNmRWgINGiPhbAHm84EF5MMl8SFGZgE0KyTiNLBHc6m8LQbd7eTvhWSq98K5sK00pvbhcHskGxgnVNUsNqa9jOPgWCGtG35p9FxvtMfCp1at4hPOepMbqVyLFR8obp/tFNoC7qUyHXZmB6HqxQIpUnfWt5Ym1EiC6eoBWdk4h5W4YB3iqMCtI76Wn3TYRRcmBq2CfR+I/JaMQHBqG/3/HM+KMoth6CjOUjOwiHnMEyfurPo359IFKG0ovHHJXzqaYb8OaLxueyu0sEH1ZEJvyGqrl/Glmpf/KUqel1iXXi98gvRTeN+XNLkow0c2lXmnCl24JlsjWuRGgHFm+aWwj9mYRXkvYmCauSzYjGanl+qF0cD20MpAUtWYtcRa/73GvHn86sxFRgO+t0/h2vFDz0edW8XxpdszQxqZNhhWjaWrIxqAbAz6pEBUJdzm6wcVInxD+AeC7STSjL7iCkQZnBLLNSpAhnpxu2geuWoCpDPWkwRkAh/ds2pLekWhenpwNBN+1mtOZsjcYnAnEnFNP4oxs3nDuN5MxwbJRc8EOgSOo4/3XTYlwN5PRoTFC7SshfKVKBuHrntMa5KVbr+KNpQoyXf+iUvvHOCeCJcYE+EEL+f70EjMI/faa6Uf83IrQZVlWGcHylurgYYRWJUSQy1lwhDIeyldTp3MBsfJbhx8YOXX5sR9FCMsxYARy8TDjyVifh+zjHJqch1YBe4CblXwRxU6Ppd+sTyA6Mj4ldEYbFcT1Z2Z32zdPVqr6bstwUXncv1fXVwOgmS1Soowih8jKoZemBeTQITUL2AoWlX0jXLEVrgIlKgfWgUR7o+oH1i8bGwYD+NxrysG4hopdVRAq5X9k8eWACT2DOJwWW+lA6u+lBHZc/pgIMWxnaDDgFLqUTrp9D/AQpEZiTCAoHPVJps+B2NKc3JeC0mONtAaSbAkP13aoh6q23QEkgV+pif6N+/SHwGzI26rKZQz1MClIkLAMkVi8L2RwI50t/wVVGpgaxFi5h6FwH3g9ZVOFMVhZ5xmofySstv6xghKqj9zmbbbeXaUqN1gFsh/d+IpncpvMhgiuyHSOX2xL6qMWPZxkrtfv54e8zLidr59XtgVnmhqGi+rfhlRYZVX5945bt2byV06Af/ne5TPx6fVAMnvX4Yn0Kuz1elq8RVd0lrsM7zW8kgUl4DVoxBY1F14e+a6MhoEUFF0/5/xcvURb06H/BfkKgPeolJTKAN4b2WT5Mdv2Xsg+RhsYdq7P5yK0LaJ0ElPCYuRh87KR9TiY/zHq4VbVQvR8x97BZeGRmSsKtDlTQNhdNvPeaiGMryWP4GZZP+e/hMQZ6Mntgf70SpCpJUpAd2e8ItnXkQ==","layer_level":1},{"id":"c7aff158-639e-4807-a30a-29401569f71b","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Frontend Architecture","description":"frontend-architecture","prompt":"Create architectural documentation for the mobile frontend of the expense-wallet application. Describe the Expo-based React Native architecture using expo-router with route groups (auth) and (root) to manage authentication flow and protected routes. Explain the role of the root _layout.jsx in wrapping the app with ClerkProvider for authentication context. Detail the component hierarchy starting from SafeScreen as a consistent container, down to reusable components like BalanceCard, TransactionItem, and SignOutButton. Document the state management pattern using the custom useTransactions.js hook that fetches and mutates data via the API. Illustrate the data flow from API calls in hooks to UI rendering in screens like index.jsx and create.jsx. Include styling approach using assets\\styles modules. Address platform-specific configuration in app.json and environment handling via constants/api.js. Provide code examples showing how components interact with hooks and navigation. This section should enable developers to understand, modify, and extend the frontend effectively.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"mobile/app/_layout.jsx,mobile/hooks/useTransactions.js,mobile/components/BalanceCard.jsx,mobile/constants/api.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5805116+05:30","gmt_modified":"2025-09-05T18:30:56.5225788+05:30","raw_data":"WikiEncrypted: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","layer_level":0},{"id":"305012ab-71a4-47e7-8c58-85f821727ce7","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Backend Architecture","description":"backend-architecture","prompt":"Create architectural documentation for the backend server of the expense-wallet application. Describe the Express.js server structure bootstrapped in Server.js, including initialization of CORS, JSON parsing, rate limiting middleware, and route mounting. Explain the layered architecture pattern: routes (transactionsRoute.js) delegate to controllers (transactionsController.js), which interact directly with the Neon PostgreSQL database via db.js. Detail the database setup that automatically creates the transactions table if it doesn't exist. Document the middleware pipeline, especially the Upstash rate limiter applied to all API routes. Explain the health check endpoint's role in preventing server sleep on Render and the conditional cron job execution in production. Highlight security practices like parameterized SQL queries to prevent injection. Include the environment-driven behavior differences. This section should give developers complete insight into server operation, extensibility, and maintenance.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"backend/src/Server.js,backend/src/config/db.js,backend/src/middleware/rateLimiter.js,backend/src/controllers/transactionsController.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5838334+05:30","gmt_modified":"2025-09-05T18:32:02.995011+05:30","raw_data":"WikiEncrypted:N3UbzwGjCC3xD6BrTM0cq8Y9ccVoDb9n1FwE8c3MNy2FQOgK1VCbEwsDvJYoUtQwj8mQ14lxcm0/1ON0LgrajrrtL/Z0a37U8aFUXdQgN1nsphFSrM608GotvkL0sbK5JbTWjT+UypwHX3ICWw55MRX44o5H6VJnXWS9hTAdZw9G8lcG3GOf9gJE6RnM2753ut4daOEKuDypg2XqU+EJSuDi6ocSmT9M/tXQmvgGafgutYAswpdbMSPVmCm5FebF/DN8d1IgaVolz2YWccR7KP5NSfYJPn1s/Kp2k8IbnI4Hb2j9TVqhGPRzS+yjnzsAnpiEb1lgWyTIXguSb4KagZ+9U8SA/DxIgnDv4v4c144EPdf+mcVK6Sqd8BWfwcYjeF0BYEt9m2P3GkI+xNw0h8To/+V0sOQXEdNuJMu6FtU3F3vqT9oB4ltCxHNGZALkeFwZgV44+re0AqWzTPy2pqY43OxuBtp28Oa8nJSpL3odRGAiiWSwpU9sgtVRDSn78uW5A4mHFw6k04S8n4hsS5WzpS/Waeh85Qq9NqH+ebjr28i/8u4q5NbSfgexU4ZAd/cJIXfcRNEBR7O26yiA5X91UH8fbY+SU1f+EdBOhVgjZshn4BoSQZr9sHapJpEmGhcsYrvJfEWl0YOHEVM4zkVqJ0cVFqbrUeL13tNWasSen/Us/f2XTTjEPt0DgOZCD5CyDrGWHH9Kq++UBWQ0LgA+nMnU/bpfsyhVzhZj3wwjWXxTv+dWV1bqrVWh68d6DWK/GKqPxsrzN0gWRdpXxV82vkbQSEB6QVZgQQWbL6Iz5YRuY6uFBj3ApPk49CL/wB/hbRNxW85oEtqaGzlQ0hyMy/HDUC10kfGWmUg1bvkgWvcAy/sKaurQ+/Gljwrd4MIXLmLl78/U0CryxXH0Q3hwAA+fNWVfV44uMT3cn13BZGdUPFhkvhLqLyVDB8RAqPgU7L7X8tb7/w2d9hqYkG35hMKkwhxcSX35V1IE9TrrRNXxrXDoppTNCMCvQKKzAvDKIcgBphUxKK10kw5F9cJG4BjrSUl0QYPuG/1z64B1/bt8e+AwkyskqXtmtKYXwt6p2ln2gIm8WRkbmCHQq+QWOsGQhKX4vbjtRHIRnu5ITojPTRua3EBwCW2j+lebK5qsuv90Udlj0XAAh5XPOPTzTwWQb4Dp+imbV47byxqE+H3N+1gA4aXiiMtasnDh8oS3wkJpe1DiavL0p98EtSt0D+gWioDLiLHV+4iWz19APjmUhFnc7jgUMBpmGkUwplh6YjpEfsTAYc7zYAG+u7YaDENp59QDTqc2Ct3CsjXhynKPJKItPtSUN55iQYzTTde3um2SiWsU8bmlo1MibPVZJHPKLFiqzEl7BO5j2sTPTCuo2vCSvy2O/FUb7/C8K/TAVMSinuQygsc8JzU5t6047KyDij3WSpyMehGIa+dSNJYqWcaZUTU4qAa6pmTSPM04FknluCcMPnWmxTrwcISkWFyUE5URdbbGHhkwlnESfPpyoizSoGs4zWZrmL5uf5qu0RDsTGrgP55MiIPvmhvNEPhqkvQNEY1aVWRvs34KcVriF4T2XHwW/IG6eOtpzLuY4X7ZSZIRnn2WzFzHXl495eckG0cYtqXaL2YnvEFFacpy48iSaN1PVuVb6fmsEGCNb7ITvc3Vc7S2VSS3hY3yPux8a13kdUOZx+vMtgKD492zvbniEWP0Fne5Wtktv0DExWpuf1mQvgtvaSibIn9jT3Q/b2O7FVL75VOzPhxMeAHLIXkSvQJX1hRSu3dTK3xQQ0DGqjhD8vy2VpHRCRjZ0690evktWHhgLoR+jZxqsiivLD4ixyWZm4RaNypmx9fLO83rRsXk7rTYrsJYISeEmjdhmBGt1XzhRIT3RdJ6IWNNKEFYABRrwAcKvNXTgEHwMa4H7deqj76dREHFTA==","layer_level":0},{"id":"ee6544fb-99f8-48ca-a71e-776771f88a12","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"API Reference","description":"api-reference","prompt":"Create API documentation for the RESTful endpoints exposed by the expense-wallet backend. Document each endpoint: GET /api/transactions/:userId, POST /api/transactions, DELETE /api/transactions/:id, and GET /api/transactions/summary/:userId. For each, specify HTTP method, URL pattern, request parameters (path, body), response format (JSON structure), and authentication requirements (Clerk-generated user ID). Include request/response schema examples—e.g., a transaction object with id, user_id, title, amount (positive/negative), category, created_at. Document error cases like 404 for not found or 429 for rate limiting. Explain how the mobile app in useTransactions.js consumes these endpoints with fetch calls using the API_URL from constants/api.js. Address rate limiting via Upstash Redis (10 requests per 10 seconds). Include client implementation guidelines for both mobile and potential web clients. Add security considerations and versioning implications. This section must serve as a complete reference for API consumers and integrators.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"backend/src/routes/transactionsRoute.js,backend/src/controllers/transactionsController.js,mobile/constants/api.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5867802+05:30","gmt_modified":"2025-09-05T18:33:01.4894925+05:30","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1BE4NbdjhyXxNGZmICsK7KpSWMGUwjRT69SGMsZLrg7AVv/AtCbtWvCTkUZcjzuNAC6FUtYEj+RegoW9af3mZsqca6zP28fSTuzEQuT/RPyoSstEL3mv/j6gy4gQfmI48UzOgeTRj387qms2IjJIdpKK0knnrBK+l8LXCHQabirfJHdEhyVNhFNDZAu8HW7AnqCUz7adCEuK1YfBfI3mo63OgFt5BqdTzntfXNvPOob22KL4+UeqWqXfdIcxlUDU0tc5LQ+knjMyP6usCN18LoI25C2sl1bUcuPBxaE6lVhEsGiBAuja3x3iT6DJuizx9dqoAIMP638lc6eYPxyRUZ3CVDDWYg8MKNzYWE0ucZOQDrXIlp962bMwbJUjkjeR8wLjylR4RSJosIgaRyUD2K0gq/b31VG9aF5QUPHMV0OPN/oAI9+LtZuuZDFHk4u7elpG+1gatEoVfaHmU8uWkHlvIuSsVCw65A550qfmvXl+qIEjouuu27F4tody1d1KjSVnW1y/PiM2kWN6KWAErLni8r3j12ZPdIuj9HEgY01vDmqkJL5cBb/MRtmOeWAijGO3nR/9XwSRzylDh0TU52TgQhNWymNxG3Z09yis1cSUfLFvXWmgBC+btJxn92Ii4IiZn+Y2NHbZHRp/fR2I5XvnF6oJrf1hIBF4//E0M/pztZiR7yyLL/FN5l+WQckjnSkKtwnDXsLjpB+i9G4H8SkTCItPulLaK3epwnrBX0gsclBsQl2hz9SfIX82UxnDr7M58ARY+cpIyuDPpeuXtbT9bd17bBPwE47q6rL+FKYTWCFFDR5WvLSvYNtmZ/C6mT9FuFmI0gbqxbqIqBKW3iyqzzIXcPkBqlm1jwOJr+jhAwpmviFow6zx1S2rLAeL6tddz6gn2uOjfYHfGo/Yl4bWbBTyjjo3UCC0/Sky2sJcI8fAQ6DVVWthjQ59AttQuaqvXFJge7ZIvQU7jNuUVp7vv3CHsrnDA0O/mFDyAUKv6jNCWgDfV3rzbn7hcjAip9A1LgEpdW9c25boqrTIY5k2Yuom6E0zftLnRZNfb2CFuApVo3fXiyM0oXlIb/0ZP+FBH6N2HBLYps87XKd1emIL9Fbi4ECl446/xUDvF9ob5E3oCrsJZD0PHjxQnOURzLK7shMVGGKwu2rgCYoqmt67NjIJzCPLtJpuyDS2mw/qki5gkDShkLcFIU02k3/GhYgJaVQmbwB8wCdrVm3oZLGORG1TX+gViembLNowDUTsgad/+gki6IJIMfMzFr9att5W+7jWealoPWPypNPA2FQQ/o/aH1pQM2BYM1VDVm5CZZb1CPwbXNCe6oS5NFVYYyOb2hmgtNt1WOrJbZ41GVF28bYKmn5XIb9mAu5GAgkRirCWe2M9OcZ/Jru7I7F5/T44fPiXzLizJEysKz8If6pcLYQ1HFh085INERpmk/jz/DfkZ18bFtIlgiZSiK0GIXz0b0kAJIDJp/tJsoM8IzRk50O/IICHn4lvrfX4CHZIDRv8dkHvxX/lYTmK2M3d6zJD1oEdbrlrftgrWE3xpn6E2gFFPVELhdXVmFeV4jw4mnEPm0JjgYZwZTCp651i7x0ggwv76qKFiSwtm6g5jymEIkCYImrb5D+KtwFR2czEbCUKl5K+rVR+1eV/T72HnJDK9H7H1i19+q2Zxan+2nzlffqM5Dj9i7lJgLHnd23iWlF89qsxOPVML0IZ0G4FM2x516oLC27qKOhV2bR0heIqyEZzy7s1kQcbemVJYpxvkPZWW4DZivsi0B7G8zp4Dg==","layer_level":0},{"id":"a8bfb36e-2202-4fd0-b4d9-1b389649baef","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Data Model","description":"data-model","prompt":"Create comprehensive data model documentation for the transactions table in the expense-wallet application. Detail the schema: id (TEXT PRIMARY KEY), user_id (TEXT), title (TEXT), amount (REAL), category (TEXT), created_at (TIMESTAMP). Explain that amount uses positive values for income and negative for expenses. Document the database initialization in db.js that creates the table with proper constraints. Describe the data access patterns: SELECT queries for fetching transactions and summary calculations, INSERT for new transactions, DELETE for removal. Include sample data records and SQL snippets from the codebase. Explain how financial summaries (balance, income, expense) are calculated in transactionsController.js using aggregate queries. Address data lifecycle—records are permanent unless deleted. Note the absence of UPDATE operations in current implementation. Discuss performance considerations for querying by user_id and potential indexing strategies. This section should enable developers to understand data storage, retrieval, and integrity rules.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"backend/src/config/db.js,backend/src/controllers/transactionsController.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5897436+05:30","gmt_modified":"2025-09-05T18:33:55.9212429+05:30","raw_data":"WikiEncrypted:klcgW2PbPxJambbKMzvFt2XqBX7IvpMX3bYT/G9FRjy4jCaxvUk4MzD1SWIOBZs/kdV0a0/LDW95M5ju8hifqcexhdOzTXtR0c4OIHTXToZSN1smZ2Fc1UDTsEIvreeXeRUF10EnaMSWW6D8e8aiV3JhPV/2kW0zy4kGI2y67wvw5jNA7tfGQNl1q8rD0FQ6BiYvGEyZBdeYctz8dK0TC8hhJtDuV2XW9E1YRdzaO0MgW/+/vxec2f1+cJhWKFALaYww9MzYmwGpwX8nLQjQ3v7rkZ1muwE5EeE8ATV38CKVp2rHL6yhCtcElcY1Ta1054uK7KpwFFP3dR69gx9s3Dx0fXLfZE2KgyTSknIqAjTAPWAPGDTdD8KDCoY2Ws7YaLURNYMewH7k/+4lDQhvwJWAB1oGXLhfCsmQKWXVA2TuGfqAC1rch2qEEYfKrfF2XFTa45Txrw6kNNKTdX8pqA+XC7kJPR5jKRoErlt7J46soU3sMA7kBQlepcW0GSFEy+6GVn0ruNNZP2ss9lCGcQthM/XXla9XFicwCMs9/w73M6iWod9ZqLPDCfqFP0hrljxoEGMZPl1+pVmsuv/rwOSSwwVB6MF0sqeBs2j2533pVqroG7aeFghLImOvLJmAU6GHMNG0v9U2nR8aIrAmKgn4R0XdTTvJG5fPChVkudV4Z5ICjKUIuIReHp1FXgfMe09kY3IWHGm7Cmhhu8MRvQvZY990BRz6n/rVhGgQhsLMNmqlAEWf/aj/WdoQm8575WJSatf2QNcLUsL2SPH53Iw9L165LI1cFmqD8stV9i+PR5WXCaT3/eUHw4s/kOdg1A4R/Q5BShvu57KrbPlAwWrR2lCkDZOEo761vBcQg794dE3/1mD0m7E1Z4k8hQVE50bSr0W4rZlWv3mu5ddyOkeiHHiA5pM0nYaSnupkY7qVP1BEp/tUm3QL82fu1KzQpie/SUx+dZepeOMyVSB8L+fkysTnBmQ1ByISrA4lzo6tW4a92ls05MCnJTlLYoB2/TwVEgN0vsofYFFXaJz3Zc4MBCTdqI1Ub6TENZ19EikJvPmbm9a+KSHpmSKSDShi2px5FbfASpZCszI5q4yutCj6pJlKg4nIaBeCif0a5tfT4QXD/Bz9mR/i+yd1fbFIzdAj2yrMZyOGO6QMqWnBDuYcYWFTEhqroJF+HHoderE4rjOE30MPANabgQk3Wq20TeIyN92Xie40ReoA1W54IZTmsRyfY6ntZ2Gq1ePSBXY1jO78IlUa+jqrl7ezmr0mX9OWcIrAkGGI+8YO+IS1qhgbnSyFtX+t7KOf6p4mjSduHVyA3HzpJb7FjmQP1dMiM0tLPqMWolQlM+1aJuLYAN86QJJBBJVwI29yTACntrAHir3/fPG+3I0KWRTYE3meRoWlENKxEebEywi6Yp3KgjQBRiPpqbDYbfie2tCFah8rSV6r3eTMZQq4XiKeFXQ824O/7ZhRsozqAVjKKCUn2ZG+Tw9SzoKOPeYGKe8aKrX6rULyWnEEX8p/Jh3FtojMhviesncmJEQOj1+F4Am1BF/4cQ5p1dzpe33SWbTnye2yeESECSi64ftMY+jqY8XJxcDO0575gefJ1CQJb6F25YGl5GBa6DUUnBTp1felkrhnvN0F4W4aVf/MrhF1sDDXO6xL6KY3kvf3cwigLsgkxUhXdyRzOuCxnYZ3hb2KpDYJ4fhgPfR7Lwnm//rgRdgQpSxXWxjsqj4RwVVRHn4JueYQbgYImh7rhGHOZTmFu5qYMtSgCZauzydCsqnZ06XF+Zi8m8jThP9u0fKRID/0aYVQkIAIqb7KMHmaxzpE3UE=","layer_level":0},{"id":"9898f712-106d-4a9c-bfc9-519422251ccc","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Authentication Flow","description":"authentication-flow","prompt":"Develop detailed content for this sub-feature section focused on the authentication system using Clerk. Explain the implementation in the (auth) route group with sign-in.jsx and sign-up.jsx screens that redirect to (root) upon success. Describe how the root _layout.jsx wraps the app with ClerkProvider and implements tokenCache for secure token persistence. Document the flow: user signs in → Clerk authenticates → token cached → userId extracted and passed to API calls. Explain how the mobile app determines authentication state to render either auth or root routes. Include configuration details from expo-env.d.ts and environment variables. Provide examples of how authenticated requests include the userId in API calls. Address common issues like token expiration, caching failures, and platform-specific auth behavior. This section should enable developers to troubleshoot auth issues and extend the system with additional providers or custom logic.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"mobile/app/_layout.jsx,mobile/app/(auth)/sign-in.jsx,mobile/app/(auth)/sign-up.jsx,mobile/constants/api.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5926211+05:30","gmt_modified":"2025-09-05T18:34:52.8246673+05:30","raw_data":"WikiEncrypted:uxAckj1IXK2TQH//kEdeBDSMc+4dQ8ETDu++muPZmC1O+tHSRn+Gqq17wB1/eIAiVYQ9k7C+AMh0GTv8roKGPPx2UEJY5w7HKxxFurqvke0Zr2UAMERtF85qHXTfQ3jbhoR4K4epEn8hV2z4T2HUYwP8NccMEKP0fB5cUHsKZxE5XdXEf+QKpNwaH/bcX+ESUdfcbkHPxAJpL52rKFqHDl11Gch4tcyTgAPhMpcMtEdRF3Z+Qhfh46J9Ll+MGqj7IUBubnNxSZwvc3SygYYZZzFSZInOzQaDSKaQ0/8Mmv2CD/eBdlsbYxE6DufREB8f5QEyi97YLzQjsZ0d+A6nb43tF4FofbHgueo52mYyXk9meEBMgM1um46jo6dX86rM6ibrnvYX8ePZ4mCFPWUQjr5GLrjRVWrZjpENGWEIzgnkOh7RxR0g2X056Ifkk5Tg6WpP968biKoJxjbnfKgsEyRwVGTn81+KuYdRGN3Aqd4mO7jxjnfiGRKZxDLTDwznlptwW7n32g2h54RxdxaIFowdU8d/A1mEhPUScd2mnumVCczSoJ1DljWh+h0sFC0aVYKk7aSPF66zfr1M0DNi3X0rWNMtPUvibgL22XloQ2t15snYvDNVgiw9L5/6HXzjFXTaQivEPrWXzjckbbJi3lWJMI3XvYrg47I6zssmowKmTel3xacWKXsD6pRBTboHzOKD8IMtlT9bOFWpfkmQXq6UM1LIBeV2xOULoShNzcNzGD6LulUfbXVpftyP4vKgEAxIeOBF9P2vk9fX3QnuVC57VUCIlMV5bOfs/3rkvW4mPicfR/0wuZ8EJitPLdYg5nfJjDvWyCf/jejlN+3a+XEZ1lX9PYzMuUt2PFnUjHcjf6mpz9V1JXys4EOtXvKWJrAIGTlKaql7S1EJlTeMTeDntwtWGdPx357PEJ9EFDXVTRDskJBTetzmmgiAGbK3c0d6m2KGPxr1qxVIofOe6msT80ZBkR7VklXHjni/0JCMn9MnmNQ86gmKsxR0dAPOngxZor6D5KIpKiuDmGXYQz52zhWAPa22N8pofbRLc+uXjFHLvTPvtaFatz//GKxb0CdQmrGzPtEU78j12BjwFzFWiLOYm16WCEgETP4b7yEU2qJ563ZKk+l7c0YsGKBBBoXBwL4t9WJUalM0ZaWCRiL7OqDO0S8Scq/rT3pCG0x6NMLiu4KYT1Bos90PV8Pj026/TWdzbezVrloYJknw1UMcyhe6hGpdnKiUQ8GsiT1P2FE0wawV9zFKSVvCW55F6DaysGURq/BM6wcHqECGr6jyI+EToLhRHHC1r3hfO7ISn8Q9XnxGXwiNxkXqYCmTFMP/bwYurGsx7g/WAqlp8YtDW7VBgrbegiE6bnau1oukRQeJNbeDu+tSHHWjXOHHUCxyFtlLYS9rMZCxMYb+waJNuyinxECIDGkwDzBUmhv98Mhpav4T9j1XPrvR9O5TbYFhRnYNGZ8pLLH2MY7WAhUe5qX/S7MNiv3/k/vHIAbZGN3gQxSNWUzaHyFGgaCUDnim+7NEX278QQnDkhWsMUmEjeznLaPRZ1FY+MvGeLtBsyZxTEapBR7L8RJU/XJbjx0KurxFzr6yqUpJ1kEDHy6yjWFWi2V99gymhzXEtH1JtS9vPQ+uotHO5DRs82Yek2ktDJLCDprMfBJW8G0kXMr+ejOhHDqRC2TXlFIqq3+9EYkzl9RMHmmLJ9H8SxhUA+YDAe7KggD6xuPv7o+ChnjCWRve/TISNHLSuzfYG3E=","layer_level":0},{"id":"e9ee5533-d7b4-4121-a32a-886c1dc132e7","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","name":"Developer Onboarding Guide","description":"developer-onboarding","prompt":"Create a step-by-step getting started guide for developers setting up the expense-wallet project locally. Cover cloning the repository, installing dependencies with npm in both backend and mobile directories, and configuring environment variables (e.g., CLERK_PUBLISHABLE_KEY, DATABASE_URL, UPSTASH_REDIS_URL) as referenced in the codebase. Detail backend setup: starting the Express server on port 3000 and understanding the conditional cron job. Explain mobile setup: running 'npx expo start' and handling platform-specific API URLs in constants/api.js (localhost for Android emulator, machine IP for iOS simulator). Include instructions for connecting the mobile app to the local backend. Provide troubleshooting tips for common issues like CORS, network requests failing, or authentication setup. This guide should enable a new developer to go from zero to running the full stack in under 15 minutes.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"README.md,backend/.env.example,mobile/constants/api.js","keywords":"","workspace_path":"","gmt_create":"2025-09-05T18:26:36.5985192+05:30","gmt_modified":"2025-09-05T18:35:46.7384337+05:30","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C5cUUccVsnzyjZ8m/Fzb/Z8274kuf/KnudJ16v0GEvF7Znp6n9ARiggtT5n4EnVuD6DBB8q1SNt5Q7uz9f+wE8L8H9TRLHCAksc2kt727cihX/88aBrAAL846hENHbGn7ru1JSRaLbYvnlhFpdCN9br6QNQArz7BdzJXg2ttRG1Q6TCaUfmdH7knQtM+X9utV4Yc3XmD5XUY3oRfjabTeW9VZcmdJ+BU4SzwaLkhk3lktlKbbt/qysFYCsrgXb2JnLuNmCN3+bRtCLs5boou9QrcvFrp6kXUz33Mo0IJahghIFjdjfbcmKqA4oFnf63G+h7bpPCtciPd49uQbV73TkxCBrQnwCDPTIsZ9NPtBH98e1W1XAHZKvYjoFj6M4dBX9xLEa/U/ZK+zWds7P053OtpJpV95I6Wy1rkFvpDmv7vHNLHs5znL4Sq8o4XLjzEXPz552xPlDSBuDmK79v1F/y5Lfc9DhXS03azy8NHxwewuXGhFi36BFWMLooZdM7hA8iD+myAx3LhuE5IQkKjGnWqmgXOL4wVzvRkP9i1hAJxuJfQ11xZMW7+7FNoLDV2y2ghx+EUswPo13QFXEA+yH5ptP8Z5YUK5BOIxiJ9ST67Q+uC4BEejF4nGkuJF8v1pkX+q88rSy/W0p9sYguNOXLPxno3ZEa1YInZwxp4EhFCV5/HE+AJNdyvvijwVMYnkTUngOsfs8hLCEVXpENFXzBQNuq+WkOnx3wyO2wdm3++mSrQHxM4qXuR/zFN573KdFW9w258bsvwSfLEBgFkr6Wuz8yQFWdWNYfxajluo3sTIV5Hr/6r0I63EDBzoWs7cbeYnWoayF0ZF1vJzdzFGe2UchJQr4KetTv2FMBD+mJc4iM7puN0w0tDmBI1eWPbufE9TBa8wqT6pEL4s4X/z+aVbdxytEy1VqDLevyZNaLZrQq+z4aToy0qAB1MwRnbQSfgsX9jwN8St/3vRFnFetNF6+evjY5v9dGmuW/+9mLevGI/EI4TXoWYCPUMWvu3I8wdaTv0YPfAwLXySAvkrw/KCnW3cTYTnCsahXw5Lu4uLBp0yMiqqgW/QWmZWjtArNoWaZG2JV0yRYiPvnnejqltykHPRMxJHgElqnKg6m7xEhrEFQQSYUm+Mbww6qkAbxuckko+Z+c2DyA6HXOjPV88z2vYDExMLUb21dZU1eWn8lQII3rGMWGL32/Q3nwVxelA46TDdSfEJEVWEwC0GtfKBYYPh9vW0rsLChhBhM0afdtTykaMCJcQ/0dgSujCO2Jj31jh+KAFt+hca8f3oZiIu29DiE5cmR4ffoviicwgcZxSHWhFe5Ba0Q2PSt4PsINuSkpAbXkD0FajMKaDsX55tDQDZys1jYe7g9tM+8f5aQuT6WEXahTEZ2tUOnGNQ3vzhmvCIrVKvAoiXYIg3fuMJd2hmMqGZHneJ5cHAYK+VYup7TTDj+JqpzjJSXBpaCTd1zFnJMRpu5vGy2uvLnLsHS3LyHbtYjuh627uEertADGyCsoRWWMRLqTaJf2uir6pTfkSGy63O+5nVed9wSO14tg6ouXhYZmxwJVSRuul/q6UAbbkiE0EpJciytcUcls6xq5VyNJQpNfdl/kO98fHTTT0A5bfPTnj9C+ci6dM","layer_level":0}],"wiki_items":[{"catalog_id":"aaef2078-22a1-45f0-8394-65dbdc4d41ee","content":"","title":"System Overview","description":"system-overview","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"ed6f2e5f-7420-42ee-9a9f-b40e07d0d9cc","gmt_create":"2025-09-05T18:28:01.1174272+05:30","gmt_modified":"2025-09-05T18:28:01.1272498+05:30"},{"catalog_id":"9cb59031-6a72-4a61-9c0d-2c7c390b4688","content":"","title":"Technology Stack","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"48a84b1d-3251-4c50-9397-0419bc433b85","gmt_create":"2025-09-05T18:28:56.0158838+05:30","gmt_modified":"2025-09-05T18:28:56.0449833+05:30"},{"catalog_id":"1c5fd2a7-c0a6-4a48-9029-bb286e6d9b96","content":"","title":"Directory Structure Breakdown","description":"directory-structure","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"728bf8d9-b32d-4850-b6f4-13365ddc411b","gmt_create":"2025-09-05T18:29:48.9499343+05:30","gmt_modified":"2025-09-05T18:29:48.9567053+05:30"},{"catalog_id":"c7aff158-639e-4807-a30a-29401569f71b","content":"","title":"Frontend Architecture","description":"frontend-architecture","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"69ebfc7e-034a-4139-a68c-9a2e99c7f983","gmt_create":"2025-09-05T18:30:56.5134053+05:30","gmt_modified":"2025-09-05T18:30:56.5236451+05:30"},{"catalog_id":"305012ab-71a4-47e7-8c58-85f821727ce7","content":"","title":"Backend Architecture","description":"backend-architecture","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"c66882f3-50b2-4db2-bf04-4d8afa4a8041","gmt_create":"2025-09-05T18:32:02.988981+05:30","gmt_modified":"2025-09-05T18:32:02.9955403+05:30"},{"catalog_id":"ee6544fb-99f8-48ca-a71e-776771f88a12","content":"","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"d262b0db-9a40-42fc-b5cd-a28db8ee6ef2","gmt_create":"2025-09-05T18:33:01.4716731+05:30","gmt_modified":"2025-09-05T18:33:01.4905464+05:30"},{"catalog_id":"a8bfb36e-2202-4fd0-b4d9-1b389649baef","content":"","title":"Data Model","description":"data-model","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"95adccee-3a4a-4400-8166-7e52e91de1df","gmt_create":"2025-09-05T18:33:55.9038611+05:30","gmt_modified":"2025-09-05T18:33:55.9217495+05:30"},{"catalog_id":"9898f712-106d-4a9c-bfc9-519422251ccc","content":"","title":"Authentication Flow","description":"authentication-flow","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"68da1232-8464-4733-aa0a-4b2de9647f62","gmt_create":"2025-09-05T18:34:52.805627+05:30","gmt_modified":"2025-09-05T18:34:52.8253033+05:30"},{"catalog_id":"e9ee5533-d7b4-4121-a32a-886c1dc132e7","content":"","title":"Developer Onboarding Guide","description":"developer-onboarding","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"e78a63e0-e79f-466e-988b-100d65907348","gmt_create":"2025-09-05T18:35:46.7221051+05:30","gmt_modified":"2025-09-05T18:35:46.7389542+05:30"},{"catalog_id":"503ad45f-095e-4dbb-b3fa-0f68fb87669a","content":"","title":"Component Tree","description":"frontend-component-tree","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"2cb894dc-ebf6-49b5-afe7-14228950b96b","gmt_create":"2025-09-05T18:36:54.3770783+05:30","gmt_modified":"2025-09-05T18:36:54.4168088+05:30"},{"catalog_id":"21b5078a-ee01-4165-9da7-0b6792b00b6f","content":"","title":"API Endpoints","description":"api-endpoints","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"b3fed457-f5bd-4be7-9603-055c40097fe1","gmt_create":"2025-09-05T18:37:52.3184282+05:30","gmt_modified":"2025-09-05T18:37:52.3570801+05:30"},{"catalog_id":"92ba0dc3-8c07-4ebc-bd62-4fa55a39d8a5","content":"","title":"State Management","description":"frontend-state-management","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"daab54d9-0ed2-4cda-bab8-4fab2d56d372","gmt_create":"2025-09-05T18:39:02.0298362+05:30","gmt_modified":"2025-09-05T18:39:02.0711554+05:30"},{"catalog_id":"89058c89-bc09-416a-a3c8-d3f9d81c320c","content":"","title":"Database Integration","description":"database-integration","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"3bef8de7-ccc8-4813-810a-39324233edf2","gmt_create":"2025-09-05T18:39:58.6654971+05:30","gmt_modified":"2025-09-05T18:39:58.7120133+05:30"},{"catalog_id":"a1252fce-92f1-476f-84bd-e0d0b9baa4a4","content":"","title":"API Clients","description":"frontend-api-clients","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"f124efbc-b121-4bc1-8857-f40fd2febc87","gmt_create":"2025-09-05T18:40:57.0569762+05:30","gmt_modified":"2025-09-05T18:40:57.1036817+05:30"},{"catalog_id":"b07fbdfb-a58f-479f-ac60-0cb2184eb4d1","content":"","title":"Authentication Flow","description":"auth-flow","extend":"{}","progress_status":"completed","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","id":"9629b59e-5cd9-4a9c-ac29-5351d26b6a67","gmt_create":"2025-09-05T18:41:49.6464741+05:30","gmt_modified":"2025-09-05T18:41:49.6887087+05:30"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis of Expense Wallet\n\n## 1. Project Introduction\n\nThe **Expense Wallet** project is a full-stack personal finance management application designed to help users track their income and expenses. The system consists of a backend API service and a mobile frontend application, enabling users to manage financial transactions, view summaries, and maintain financial records.\n\n**Core Goals and Objectives:**\n- Enable users to create, read, and delete transaction records\n- Provide real-time financial summaries (balance, income, expenses)\n- Ensure secure user authentication and data isolation\n- Maintain high availability with automated health checks and background jobs\n\n**Target Audience:**\n- Individual users seeking personal expense tracking\n- Developers interested in full-stack Expo + Node.js applications\n- Teams exploring serverless database and rate-limiting solutions\n\n---\n\n## 2. Technical Architecture\n\n### Component Breakdown\n\nThe project follows a **monorepo structure** with two main components:\n- **Backend**: Express.js server handling transaction data via REST API\n- **Mobile**: React Native application using Expo Router for navigation and Clerk for authentication\n\n### Design Patterns\n\n- **Layered Architecture**: Clear separation between routes, controllers, and data access\n- **Environment-Driven Execution**: Cron jobs conditionally started in production\n- **Secure Authentication**: Clerk-based auth with token caching and route protection\n- **Rate Limiting**: Implemented via Upstash Redis for API protection\n\n### System Relationships\n\n```mermaid\ngraph TD\n  MobileApp[Mobile App] --\u003e API[Backend API]\n  API --\u003e DB[(Neon PostgreSQL)]\n  API --\u003e Redis[(Upstash Redis)]\n  MobileApp --\u003e Clerk[Authentication Service]\n  Backend --\u003e HealthCheck[/health endpoint]\n  Backend --\u003e CronJob[Background Job]\n```\n\n### Data Flow\n\n```mermaid\nflowchart TD\n  A[Mobile Client] --\u003e B[API Layer]\n  B --\u003e C[Transaction Controller]\n  C --\u003e D[Database Query]\n  D --\u003e E[(PostgreSQL)]\n  E --\u003e D\n  D --\u003e C\n  C --\u003e B\n  B --\u003e A\n```\n\n---\n\n## 3. Key Implementation\n\n### Main Entry Points\n- Backend: `backend/src/Server.js`\n- Mobile: `mobile/app/_layout.jsx`\n\n### Core Modules\n- **Backend**\n  - Database Initialization: `backend/src/config/db.js`\n  - Transaction Controller: `backend/src/controllers/transactionsController.js`\n  - API Routes: `backend/src/routes/transactionsRoute.js`\n- **Mobile**\n  - Authentication Flow: `mobile/app/(auth)/_layout.jsx`\n  - Transaction Hook: `mobile/hooks/useTransactions.js`\n  - UI Components: `mobile/components/`\n\n### Configuration Approach\n- Environment variables via `dotenv`\n- Conditional job execution based on `NODE_ENV`\n- Secure database connection using Neon Serverless\n- Rate limiting with Upstash Redis\n\nSources:\n- [package.json](backend/package.json#L1-L26)\n- [Server.js](backend/src/Server.js#L1-L38)\n\n### External Dependencies\n- **Backend**\n  - `@neondatabase/serverless`: Serverless PostgreSQL\n  - `@upstash/ratelimit`: API rate limiting\n  - `express`: Web framework\n  - `cron`: Job scheduling\n- **Mobile**\n  - `@clerk/clerk-expo`: Authentication\n  - `expo-router`: Navigation\n  - `react-native`: UI framework\n\nSources:\n- [package.json](backend/package.json#L1-L26)\n- [package.json](mobile/package.json#L1-L52)\n\n### Integration Points\n- **Database**: Neon PostgreSQL via serverless driver\n- **Authentication**: Clerk Expo integration with token caching\n- **Rate Limiting**: Upstash Redis middleware\n- **Health Monitoring**: `/api/health` endpoint for uptime\n\nSources:\n- [db.js](backend/src/config/db.js#L1-L27)\n- [rateLimiter.js](backend/src/middleware/rateLimiter.js)\n- [_layout.jsx](mobile/app/_layout.jsx#L1-L16)\n\n### Component Relationships\n\n```mermaid\ngraph LR\n  A[Mobile App] --\u003e B[Expo Router]\n  B --\u003e C[Auth Layout]\n  B --\u003e D[Root Layout]\n  C --\u003e E[Clerk Auth]\n  D --\u003e F[Transaction Hook]\n  F --\u003e G[API Call]\n  G --\u003e H[Express Server]\n  H --\u003e I[Transaction Controller]\n  I --\u003e J[Neon DB]\n  H --\u003e K[Rate Limiter]\n```\n\n---\n\n## 4. Key Features\n\n### Functionality Overview\n- **User Authentication**: Secure sign-in/sign-up with Clerk\n- **Transaction Management**: CRUD operations for financial entries\n- **Financial Summary**: Real-time balance, income, and expense calculation\n- **Rate-Limited API**: Protection against abuse\n- **Auto-Healing Backend**: Health endpoint to prevent sleep on Render\n\n### Implementation Highlights\n- **Database Schema**: Transactions table with user isolation\n- **SQL Queries**: Direct PostgreSQL queries using parameterized statements\n- **Conditional Cron Jobs**: Production-only background tasks\n- **React Hook**: Custom `useTransactions` for data fetching\n- **Secure Layouts**: Auth-gated navigation using Expo Router\n\nSources:\n- [transactionsController.js](backend/src/controllers/transactionsController.js#L1-L90)\n- [transactionsRoute.js](backend/src/routes/transactionsRoute.js#L1-L13)\n- [useTransactions.js](mobile/hooks/useTransactions.js)\n\n### Feature Architecture\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Unauthenticated\n    Unauthenticated --\u003e Authenticated: Sign In\n    Authenticated --\u003e Home: Navigate\n    Home --\u003e Create: Add Transaction\n    Create --\u003e API: POST /api/transactions\n    API --\u003e DB: Insert Record\n    DB --\u003e API: Return Result\n    API --\u003e Home: Update List\n    Home --\u003e Summary: View Stats\n    Summary --\u003e DB: Aggregate Query\n    DB --\u003e Summary: Return Balance/Income/Expense\n```\n\n\u003c/blog\u003e","gmt_create":"2025-09-05T18:25:01.569566+05:30","gmt_modified":"2025-09-05T18:25:01.569566+05:30","id":"80d06bc8-64cb-42b3-99a2-748dc728c1f4","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-05T18:24:27.7401307+05:30","gmt_modified":"2025-09-05T18:24:27.7401307+05:30","id":"d243b900-e991-4fbc-88f0-6f00d74392e9","repo_id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":""},"wiki_repo":{"id":"d7fcd8f0-7aa4-48ab-a5ee-88c491383772","workspace_path":"","name":"expense-wallet","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── backend\\n│   ├── src\\n│   │   ├── config\\n│   │   │   ├── corns.js\\n│   │   │   ├── db.js\\n│   │   │   └── upstash.js\\n│   │   ├── controllers\\n│   │   │   └── transactionsController.js\\n│   │   ├── dummy\\n│   │   │   └── test.txt\\n│   │   ├── middleware\\n│   │   │   └── rateLimiter.js\\n│   │   ├── routes\\n│   │   │   └── transactionsRoute.js\\n│   │   └── Server.js\\n│   ├── package-lock.json\\n│   └── package.json\\n├── mobile\\n│   ├── .expo\\n│   │   ├── types\\n│   │   │   └── router.d.ts\\n│   │   ├── README.md\\n│   │   └── devices.json\\n│   ├── app\\n│   │   ├── (auth)\\n│   │   │   ├── _layout.jsx\\n│   │   │   ├── sign-in.jsx\\n│   │   │   └── sign-up.jsx\\n│   │   ├── (root)\\n│   │   │   ├── _layout.jsx\\n│   │   │   ├── create.jsx\\n│   │   │   └── index.jsx\\n│   │   └── _layout.jsx\\n│   ├── assets\\\\styles\\n│   │   ├── auth.styles.js\\n│   │   ├── create.styles.js\\n│   │   └── home.styles.js\\n│   ├── components\\n│   │   ├── BalanceCard.jsx\\n│   │   ├── NoTransactionsFound.jsx\\n│   │   ├── PageLoader.jsx\\n│   │   ├── SafeScreen.jsx\\n│   │   ├── SignOutButton.jsx\\n│   │   └── TransactionItem.jsx\\n│   ├── constants\\n│   │   ├── api.js\\n│   │   └── colors.js\\n│   ├── hooks\\n│   │   └── useTransactions.js\\n│   ├── lib\\n│   │   └── utils.js\\n│   ├── README.md\\n│   ├── app.json\\n│   ├── eslint.config.js\\n│   ├── expo-env.d.ts\\n│   ├── package-lock.json\\n│   ├── package.json\\n│   └── tsconfig.json\\n└── README.md\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"ce7ab98ead6b7410340ca3f62a4752b40e27da47","last_commit_update":"2025-08-16T19:43:15+05:30","gmt_create":"2025-09-05T18:24:27.1865903+05:30","gmt_modified":"2025-09-13T15:54:05.3873962+05:30","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}